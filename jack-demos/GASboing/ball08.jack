/**
 * Static Image factory class.
 *
 * Requires Image.jack
 *
 * Generated from "ball08.pbm" by pbm2jack.py
 *
 * Copyright 2013-2016 Gavin Stewart.
 *
 * You are required to give attribution to the author (Gavin Stewart) for any
 * use of this program (GPLv3 Section 7b).
 * 
 * Trying to pass off my code as your own in your Elements of Computing classes
 * will result in a cursed life of forever buggy software.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
class ball08 {

    /**
     * newImage - returns an Image object containing bitmap data.
     */
    function Image newImage () {
        var Image i;
        var int width, height;

        let width = 5;
        let height = 60;

        let i = Image.newBitmap(width, height);

        do i.push(0,0,0,0,0,0,0,-3104,127,0,0,0,-7688,7,0,0);
        do i.push(0,126,1539,0,0,-32767-1,31,3586,0,0,-8192,-32753,7711,0,0,-4096);
        do i.push(-32765,16127,0,0,-4096,-16383,31231,0,0,-16384,-8192,24831,4,0,-32767-1,-4095);
        do i.push(255,8,0,-16384,-2033,255,23,0,-8192,-1985,255,30,0,-8192,-513,255);
        do i.push(30,0,-4096,-3585,127,62,0,-2048,-15873,127,62,0,-2048,255,126,124);
        do i.push(0,-1024,127,112,252,0,-1024,127,0,252,0,-512,63,960,252,0);
        do i.push(-512,63,4032,508,0,-252,31,32736,508,0,-194,31,-32,511,0,-386);
        do i.push(31,-32,499,0,-3970,15,-16,899,0,-32642,15,-16,3,0,62,6);
        do i.push(-16,3075,0,63,8,-16,3075,0,63,120,-8,3075,0,63,508,-8);
        do i.push(3073,0,63,4092,-4,3073,0,31,32764,-4,3073,0,31,-2,-1,3073);
        do i.push(0,31,-2,-31,3072,0,31,-2,-127,3072,0,30,-2,-1023,3072,0);
        do i.push(30,-1,-8192,3584,0,16,-1,0,1536,0,64,32767,-32767-1,1539,0,448);
        do i.push(32767,-32767-1,1567,0,4032,32767,-16384,2047,0,-64,16383,-16384,255,0,32704,16380);
        do i.push(-8192,255,0,32704,8160,-8192,127,0,32640,8064,-4096,63,0,32640,3072,-2048);
        do i.push(63,0,32640,4096,-2048,31,0,32512,28672,-1024,31,0,32512,-2048,-1021,15);
        do i.push(0,32256,-2048,-481,7,0,32384,-1024,-129,3,0,31488,-1024,-897,3,0);
        do i.push(17920,-512,-8129,0,0,1024,-512,-32737,0,0,2048,-249,-16369,1,0,0);
        do i.push(-65,-8185,0,0,16384,-386,12291,0,0,0,-4036,3072,0,0,0,16412);
        do i.push(768,0,0,0,-4096,225,0,0,0,-1024,1,0,0,0,0,0);

        return i;
    }
}
