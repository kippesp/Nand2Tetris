// A class for vectors. Not much else to say.
class Vec3 {
    field Float316 x, y, z;
    
    constructor Vec3 newZero() {
        let x = Float316.newZero();
        let y = Float316.newZero();
        let z = Float316.newZero();
        return this;
    }
    constructor Vec3 new(Float316 f1, Float316 f2, Float316 f3) {
        let x = f1;
        let y = f2;
        let z = f3;
        return this;
    }
    
    method int x() { return x; }
    method int y() { return y; }
    method int z() { return z; }
    
    method void set(Float316 f1, Float316 f2, Float316 f3) {
        // deepcopy
        do x.set(f1.s(), f1.e(), f1.m());
        do y.set(f2.s(), f2.e(), f2.m());
        do z.set(f3.s(), f3.e(), f3.m());
        return;
    }
    
    function void add(Vec3 res, Vec3 v1, Vec3 v2) {
        do Float316.add(res.x(), v1.x(), v2.x());
        do Float316.add(res.y(), v1.y(), v2.y());
        do Float316.add(res.z(), v1.z(), v2.z());
        return;
    }

    function void sub(Vec3 res, Vec3 v1, Vec3 v2) {
        do Float316.sub(res.x(), v1.x(), v2.x());
        do Float316.sub(res.y(), v1.y(), v2.y());
        do Float316.sub(res.z(), v1.z(), v2.z());
        return;
    }
    
    function void cmul(Vec3 res, Vec3 v, Float316 f) {
        do Float316.mul(res.x(), v.x(), f);
        do Float316.mul(res.y(), v.y(), f);
        do Float316.mul(res.z(), v.z(), f);
        return;
    }
    
    /* FOR DEBUGGING ONLY */
    method void print() {
        do Output.printString("Vector with values:");
        do Output.println();
        do x.print();
        do y.print();
        do z.print();
        return;
    }
}
