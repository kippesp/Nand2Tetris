(TOKENS
(KEYWORD J_CLASS class)
(IDENTIFIER J_NON_ENUM Main)
(SYMBOL J_LEFT_BRACE <left_brace>)
(KEYWORD J_FUNCTION function)
(KEYWORD J_VOID void)
(IDENTIFIER J_NON_ENUM main)
(SYMBOL J_LEFT_PARENTHESIS <left_parenthesis>)
(SYMBOL J_RIGHT_PARENTHESIS <right_parenthesis>)
(SYMBOL J_LEFT_BRACE <left_brace>)
(KEYWORD J_VAR var)
(IDENTIFIER J_NON_ENUM Array)
(IDENTIFIER J_NON_ENUM a)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_VAR var)
(KEYWORD J_INT integer)
(IDENTIFIER J_NON_ENUM length)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_VAR var)
(KEYWORD J_INT integer)
(IDENTIFIER J_NON_ENUM i)
(SYMBOL J_COMMA <comma>)
(IDENTIFIER J_NON_ENUM sum)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_LET let)
(IDENTIFIER J_NON_ENUM length)
(SYMBOL J_EQUAL <equal>)
(IDENTIFIER J_NON_ENUM Keyboard)
(SYMBOL J_PERIOD <period>)
(IDENTIFIER J_NON_ENUM readInt)
(SYMBOL J_LEFT_PARENTHESIS <left_parenthesis>)
(STRING_CONSTANT J_NON_ENUM How many numbers? )
(SYMBOL J_RIGHT_PARENTHESIS <right_parenthesis>)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_LET let)
(IDENTIFIER J_NON_ENUM a)
(SYMBOL J_EQUAL <equal>)
(IDENTIFIER J_NON_ENUM Array)
(SYMBOL J_PERIOD <period>)
(IDENTIFIER J_NON_ENUM new)
(SYMBOL J_LEFT_PARENTHESIS <left_parenthesis>)
(IDENTIFIER J_NON_ENUM length)
(SYMBOL J_RIGHT_PARENTHESIS <right_parenthesis>)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_LET let)
(IDENTIFIER J_NON_ENUM i)
(SYMBOL J_EQUAL <equal>)
(INTEGER_CONSTANT J_NON_ENUM 0)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_WHILE while)
(SYMBOL J_LEFT_PARENTHESIS <left_parenthesis>)
(IDENTIFIER J_NON_ENUM i)
(SYMBOL J_LESS_THAN <less_than>)
(IDENTIFIER J_NON_ENUM length)
(SYMBOL J_RIGHT_PARENTHESIS <right_parenthesis>)
(SYMBOL J_LEFT_BRACE <left_brace>)
(KEYWORD J_LET let)
(IDENTIFIER J_NON_ENUM a)
(SYMBOL J_LEFT_BRACKET <left_bracket>)
(IDENTIFIER J_NON_ENUM i)
(SYMBOL J_RIGHT_BRACKET <right_bracket>)
(SYMBOL J_EQUAL <equal>)
(IDENTIFIER J_NON_ENUM Keyboard)
(SYMBOL J_PERIOD <period>)
(IDENTIFIER J_NON_ENUM readInt)
(SYMBOL J_LEFT_PARENTHESIS <left_parenthesis>)
(STRING_CONSTANT J_NON_ENUM Enter a number: )
(SYMBOL J_RIGHT_PARENTHESIS <right_parenthesis>)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_LET let)
(IDENTIFIER J_NON_ENUM sum)
(SYMBOL J_EQUAL <equal>)
(IDENTIFIER J_NON_ENUM sum)
(SYMBOL J_PLUS <plus>)
(IDENTIFIER J_NON_ENUM a)
(SYMBOL J_LEFT_BRACKET <left_bracket>)
(IDENTIFIER J_NON_ENUM i)
(SYMBOL J_RIGHT_BRACKET <right_bracket>)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_LET let)
(IDENTIFIER J_NON_ENUM i)
(SYMBOL J_EQUAL <equal>)
(IDENTIFIER J_NON_ENUM i)
(SYMBOL J_PLUS <plus>)
(INTEGER_CONSTANT J_NON_ENUM 1)
(SYMBOL J_SEMICOLON <semicolon>)
(SYMBOL J_RIGHT_BRACE <right_brace>)
(KEYWORD J_DO do)
(IDENTIFIER J_NON_ENUM Output)
(SYMBOL J_PERIOD <period>)
(IDENTIFIER J_NON_ENUM printString)
(SYMBOL J_LEFT_PARENTHESIS <left_parenthesis>)
(STRING_CONSTANT J_NON_ENUM The average is )
(SYMBOL J_RIGHT_PARENTHESIS <right_parenthesis>)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_DO do)
(IDENTIFIER J_NON_ENUM Output)
(SYMBOL J_PERIOD <period>)
(IDENTIFIER J_NON_ENUM printInt)
(SYMBOL J_LEFT_PARENTHESIS <left_parenthesis>)
(IDENTIFIER J_NON_ENUM sum)
(SYMBOL J_DIVIDE <divide>)
(IDENTIFIER J_NON_ENUM length)
(SYMBOL J_RIGHT_PARENTHESIS <right_parenthesis>)
(SYMBOL J_SEMICOLON <semicolon>)
(KEYWORD J_RETURN return)
(SYMBOL J_SEMICOLON <semicolon>)
(SYMBOL J_RIGHT_BRACE <right_brace>)
(SYMBOL J_RIGHT_BRACE <right_brace>)
)
